{% extends 'base.html.twig' %}

{% block title %}Maps{% endblock %}                                            

{% block body %}
<div class="container mt-3">
  {% for flash_message in app.session.flashBag.get('success') %}
  <div class="alert alert-success mb-2">
    {{ flash_message }}
  </div>
  {% endfor %}
  <div class="row color_white">
    <span class="col-xs-11 col-sm-6 col-md-5 mb-2 mr bg-dark border border-primary rounded color_white">
      <h2 class="text-center mt-1">Quête : {{ position.getNom() }}
         {% if queteF is empty %}<span class="badge badge-danger"><i class="far fa-times-circle"></i></span>
         {% else %}<span class="badge badge-success"><i class="far fa-check-circle"></i></span>
         {% endif %}</h2>
    </span>
    {% if queteF is not empty %}
    {% for quete in queteF %}
    <span class="col-xs-9 col-sm-5 col-md-3 mb-2 mx-auto bg-dark border border-primary rounded color_white ">
      <h4 class="text-center mx-auto mt-2">Résolue le : {{ quete.date | date('d/m/Y') }}</h4>
    </span>
    {% endfor %}
    {% elseif distanceM > position.rayon %}
    <span class="col-xs-9 col-sm-5 col-md-3 mb-2 mx-auto bg-dark border border-primary rounded color_white ">
      
      <h4 class="text-center mx-auto mt-2">Validé la quête : <button class="btn btn-danger"><i class="far fa-times-circle"></i></button></h4>
    </span>
    {% else %}
    <span class="col-xs-9 col-sm-5 col-md-3 mb-2 mx-auto bg-dark border border-primary rounded color_white ">
      <h4 class="text-center mx-auto">Validé la quête : <a href="/maps/mapsV/{{ position.id }}&{{ app.user.id }}&{{ user_lat }}&{{ user_lng }}" class="badge badge-success"><i class="far fa-check-circle"></i></a></h4>
    </span>
    {% endif %}
  </div>
</div>
<div class="border-top border-primary mt-2 mb-2 mx-auto"></div>  
<div id="map"></div>
<div class="container mt-3">
  <div class="row color_white">
    <span class="col-xs-11 col-sm-6 col-md-5 mb-2 mx-auto bg-dark border border-primary rounded color_white">
      <h2 class="mx-auto text-center">Distance : {{distance}} Km</h2>
    </span>
    <span class="col-xs-11 col-sm-6 col-md-5 mb-2 mx-auto bg-dark border border-primary rounded color_white">
      <h2 class="mx-auto text-center">Récompense : {{ position.getXp() }} Xp</h2>
    </span>
  </div>
</div>
{% endblock %}
{% block javascripts %}
<script>
  var map, infoWindow;
  function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {          
      zoom: 8,
    });
    infoWindow = new google.maps.InfoWindow;
    
    var rayonPos = new google.maps.Circle({
      strokeColor: '#FF0000',
      strokeOpacity: 0.8,
      strokeWeight: 2,
      fillColor: '#FF0000',
      fillOpacity: 0.35,
      map: map,
      center: {lat: {{ position.latitude }}, lng: {{ position.longitude }}},
      radius: {{ position.rayon }}
    });
    
    {% if queteF is empty %}
    var point = {
      path: 'M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z',
      fillColor: '#dc3545',
      fillOpacity: 1,
      scale: 1,
      strokeColor: '',
      strokeWeight: 0
    };
    {% else %}
    var point = {
      path: 'M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z',
      fillColor: '#28a745',
      fillOpacity: 1,
      scale: 1,
      strokeColor: '',
      strokeWeight: 0
    };
    {% endif %}
    
    marker = new google.maps.Marker({
      map: map,
      icon : point,
      animation: google.maps.Animation.DROP,
      position: {lat: {{ position.getLatitude }}, lng: {{ position.getLongitude }}}
    });        
    
    // Try HTML5 geolocation.
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        var infowindow = new google.maps.InfoWindow({
          content: '<div class="container">'+
            'Vous êtes ici !'+
            '</div>'
          });
          var marker = new google.maps.Marker({
            position: pos,
            map: map,
            icon: {
              path: 'M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z',
              fillColor: '#007bff',
              fillOpacity: 1,
              scale: 1,
              strokeColor: '',
              strokeWeight: 0
            },
            animation: google.maps.Animation.DROP
          });
          marker.addListener('click', function() {
            infowindow.open(map, marker);
          });
          
          infoWindow.open(map);
          map.setCenter(pos);
        }, function() {
          handleLocationError(true, infoWindow, map.getCenter());
        });
      } else {
        // Browser doesn't support Geolocation
        handleLocationError(false, infoWindow, map.getCenter());
      }
    }
    
    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
      infoWindow.setPosition(pos);
      infoWindow.setContent(browserHasGeolocation ?
      'Error: The Geolocation service failed.' :
      'Error: Your browser doesn\'t support geolocation.');
      infoWindow.open(map);
    }
    
    function toggleBounce() {
      if (marker.getAnimation() !== null) {
        marker.setAnimation(null);
      } else {
        marker.setAnimation(google.maps.Animation.BOUNCE);
      }
    }
  </script>
  <script>
    function alert()
    {
      alert('Vous devez vous rapprochez de la quête pour la validé ')
    }
  </script>
  <script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBGqu93anG2RuN7R9imKXX9f7OwDsNewh0&callback=initMap">
</script>                                          

{% endblock %}
